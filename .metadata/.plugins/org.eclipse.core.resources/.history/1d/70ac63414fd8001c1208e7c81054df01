package com.kylestankovich.taskLiast;

import java.util.ArrayList;
import java.util.Scanner;
public class MainArea {
	//task Manager
		tasks = new ArrayList<TaskProperties>();
		userInput = new Scanner(System.in);
	  // userInput2 = new Scanner(System.in);
		//tasks = new ArrayList<>();
		
			boolean running = true;
	
		
			do {
			displayMenu();
				int menuChoice = readUserInput();
		
				switch(menuChoice) {
				case 1:
					System.out.print("What do you want to add: ");
					//add task method
					String taskName = userInput.nextLine();
					addTask(taskName);
					break;
				case 2:
					while (tasks.size() != 0 ) {
					System.out.print("Task to be removed: ");
					listTasks();
					int removeId = readUserInput();
					removeTask(removeId);
					}
					break;
					//remove method
				case 3:
					while (tasks.size() != 0 ) {
					System.out.print("Item to complete: ");
					listTasks();
					int completeId = readUserInput();
					completeTask(completeId);
					}
					break;
				case 4:
					//list method
					listTasks();
					break;
				case 0:
					running = false;
					break;
				default:
					System.out.print("UNKNOWN INPUT");
				
			 }
				
			}

			while(running);
			
			
			//Add Tasks
			
			
			//remove tasks
			
			
			//Mark as complete
			
			
			//List them

		}
		
		//Create a Display menu that you call into Main Method
		public static void displayMenu() {
			System.out.println("--Task Master--");
	    System.out.println("1. Add to the list");
	    System.out.println("2. Remove from the list");
	    System.out.println("3. Complete that item");
	    System.out.println("4. List the list");
	    System.out.println("0. End of the line ----");
	    System.out.println("Your choice: ");
	     
		}
		
		// Read User Input
		public static int readUserInput() {
			int result = userInput.nextInt();
			userInput.nextLine();
			
			return result;
		}
		// new user input to fix bug (for string inputs)
		 public static String readUserInput2() {
		    String result;
		    result =userInput2.nextLine();
		    return result;
		  }
		
		// Add Task
		public static void addTask(String name) {
			tasks.add(new taskProperties(name));
		}
		
		// Remove Task
		public static void removeTask(int id) {
			tasks.remove(id - 1);
		}
		
		//complete task
		public static void completeTask(int id) {
			tasks.get(id - 1).setComplete(true);
		}
		
		//list tasks
		public static void listTasks() {
			System.out.println("--toDo list--");
			for(int i = 0; i < tasks.size(); i++) {
				System.out.println(i + 1 + ". " + tasks.get(i).toString());
			}
		}


}
}
